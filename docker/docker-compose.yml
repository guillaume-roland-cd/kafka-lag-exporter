# kafka-lag-exporter local test cluster
version: "3"
services:
  redis:
    image: bitnami/redis:latest
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
  zookeeper1:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  zookeeper2:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka1:
    image: bitnami/kafka:latest
    ports:
      - '9093:9093'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper1
  kafka2:
    image: bitnami/kafka:latest
    ports:
      - '9193:9193'
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:9192,EXTERNAL://localhost:9193
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENERS=CLIENT://:9192,EXTERNAL://:9193
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper2:2181
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper2
  kafka1-producer:
    image: bitnami/kafka:latest
    command: kafka-producer-perf-test.sh --topic test --num-records 10000000 --record-size 10 --throughput 10 --producer-props bootstrap.servers=kafka1:9092
    depends_on:
      - kafka1
  kafka2-producer:
    image: bitnami/kafka:latest
    command: kafka-producer-perf-test.sh --topic test --num-records 10000000 --record-size 10 --throughput 20 --producer-props bootstrap.servers=kafka2:9092
    depends_on:
      - kafka2
  # each kafka-consumer-test has its own consumer.id so it can be differentiated by consumer group information easily.
  kafka1-group1-consumer1:
    image: bitnami/kafka:latest
    command: kafka-console-consumer.sh --consumer-property group.id=test-consumer-group --consumer-property client.id=test-client-id-1 --consumer-property enable.auto.commit=true --topic test --bootstrap-server kafka1:9092
    depends_on:
      - kafka1-producer
  kafka1-group1-consumer2:
    image: bitnami/kafka:latest
    command: kafka-console-consumer.sh --consumer-property group.id=test-consumer-group --consumer-property client.id=test-client-id-2 --consumer-property enable.auto.commit=true --topic test --bootstrap-server kafka1:9092
    depends_on:
      - kafka1-producer
  kafka1-group2-consumer1:
    image: bitnami/kafka:latest
    command: kafka-console-consumer.sh --consumer-property group.id=test-consumer-group-two --consumer-property client.id=test-client-two-id-1 --consumer-property enable.auto.commit=true --topic test --bootstrap-server kafka1:9092
    depends_on:
      - kafka1-producer
  kafka2-group1-consumer1:
    image: bitnami/kafka:latest
    command: kafka-console-consumer.sh --consumer-property group.id=test-consumer-group --consumer-property client.id=test-client-id-1 --consumer-property enable.auto.commit=true --topic test --bootstrap-server kafka2:9192
    depends_on:
      - kafka2-producer
